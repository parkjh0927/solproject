<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	
	<bean id="customLoginSuccessHandler" class="com.spring.handler.CustomLoginSuccessHandler"/>
	<bean id="customAccessDeniedHandler" class="com.spring.handler.CustomAccessDeniedHandler"/>

	<!-- 비밀번호 암호화 담당 -->
	<bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>


	<security:http>	
		
		<!-- 폼 로그인 인증 방식 -->
		<security:form-login login-page="/member/login" authentication-failure-url="/member/login-error" 
			authentication-success-handler-ref="customLoginSuccessHandler"/>
				
		<!-- 커스텀 접근 제한 페이지 -->		
		<security:access-denied-handler ref="customAccessDeniedHandler"/>
		
		<!-- logout post 시 -->		
		<security:logout invalidate-session="true"  delete-cookies="remember-me,JSESSION_ID"
			logout-success-url="/"/>
								
	</security:http>
	
	
	
	<!-- Spring Security의 인증 관리자가 해당 암호화 기법을 사용하여 비밀번호를 암호화하고 검증 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailService">
			<security:password-encoder ref="encoder"/>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>










