<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.MemberMapper">

	<!-- 회원가입 -->
	<insert id="register">
		insert into member(username,password,email,postcode,address,address2) 
		values(#{username},#{password},#{email},#{postcode,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{address2,jdbcType=VARCHAR})
	</insert>
	
	<insert id="registerAuth">
		insert into member_auth(username,authority) 
		values(#{username},#{authority})
	</insert>

	
	<!-- 회원정보 조회 -->
	<resultMap type="com.spring.domain.MemberDTO" id="memberDTO">
		<id property="username" column="username"/>
		<result property="password" column="password"/>
		<result property="email" column="email"/>
		<result property="postcode" column="postcode"/>
		<result property="address" column="address"/>
		<result property="address2" column="address2"/>
		<result property="enabled" column="enabled"/>
		<collection property="authorities" resultMap="authorities"/>
	</resultMap>
	
	<resultMap type="com.spring.domain.MemberAuthorityDTO" id="authorities">
		<result property="username" column="username"/>
		<result property="authority" column="authority"/>
	</resultMap>
	
	<select id="read" resultMap="memberDTO">
		select *
		from member s1 left outer join member_auth s2 on s1.username = s2.username
		where s1.username = #{username}	
	</select>
	
	
		
	<!-- 중복 아이디 체크	 -->
	<select id="idCheck" resultType="java.lang.Integer">
		select count(*) from member where username=#{username}
	</select>
	
	
	<!-- 회원정보 수정 -->
	<update id="modify">
		update member set email=#{email},postcode=#{postcode},address=#{address},address2=#{address2}
		 where username=#{username}
	</update>
	
	
	<!-- 비밀번호 수정 -->
	<update id="changePwd">
		update member set password=#{newPassword} where username=#{username}
	</update>
	
	
	<!-- 회원탈퇴 -->
	<delete id="leave">
		delete from member where username=#{username}
	</delete>
	
	
	

</mapper>






